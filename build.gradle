description = 'Gradle plugin that combines git tags and semantic versioning, and sets the gradle version property accordingly.'

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.gradle.publish:plugin-publish-plugin:0.9.0"
  }
}

apply plugin: "com.gradle.plugin-publish"

apply plugin: 'groovy'
sourceCompatibility = '1.7'

dependencies {
  compile gradleApi()
  compile localGroovy()
}

apply plugin: 'maven'
apply plugin: 'signing'

repositories {
  mavenCentral()
}

dependencies {
  testCompile 'junit:junit:4.11'
}

// the following sets the version property
plugins.apply com.cinnober.gradle.semver_git.SemverGitPlugin

group = 'com.cinnober.gradle'

// -- Maven Central --

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

signing {
  required { gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
      
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }
      
      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
              authentication(userName: ossrhUsername, password: ossrhPassword)
      }
      pom.project {
        name project.name
        description project.description
        packaging 'jar'
        // artifactId defaults to project.name
        url 'https://github.com/cinnober/semver-git'
        
        scm {
          connection 'scm:git:https://github.com/cinnober/semver-git'
          developerConnection 'scm:git:https://github.com/cinnober/semver-git'
          url 'https://github.com/cinnober/semver-git'
        }
        
        licenses {
          license {
            name 'MIT License'
            url 'http://www.opensource.org/licenses/mit-license.php'
          }
        }
        developers {
          developer {
            id 'mikael.brannstrom'
            name 'Mikael Brännström'
            email 'mikael.brannstrom@cinnober.com'
          }
        }        
      }
    }
  }
}

// -- Gradle Plugin Portal --

pluginBundle {
  website = 'https://github.com/cinnober/semver-git'
  vcsUrl = 'https://github.com/cinnober/semver-git'
  description = project.description
  tags = ['git', 'semantic-versioning', 'semver']

  plugins {
    semvergitPlugin {
      id = 'com.cinnober.gradle.semver-git'
      displayName = 'semver-git'
    }
  }
}

task (fixPublishPlugins) {
  // Gradle Plugin Portal does not support signed artifacts, but Maven Central requires signed artifacts.
  // Remove signed artifacts if publishing to Gradle Plugin Portal
  doFirst {
    configurations.archives.artifacts.with { archives ->
      def jarArtifact
        archives.each {
          if (it.extension == 'asc') {
            jarArtifact = it
          }
        }
      remove(jarArtifact)
    }
  }
}
publishPlugins.dependsOn fixPublishPlugins

